openapi: 3.0.0
info:
  title: On It API
  description: REST API for On It
  version: 0.1.0

servers:
  - url: https://onitapp.herku.com

components:
  securitySchemes:
    token:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    packet:
      type: object
      description: The packaging in which all API responses are sent.
      properties:
        success:
          type: boolean
        payload:
          type: object
        meta:
          type: object
    User:
      type: object
      properties:
        uid:
          type: string
        name:
          $ref: "#/components/schemas/Name"
        email:
          type: string
          maxLength: 60
        createdAt:
          type: string
          description: The date at which the user was added.
        updatedAt:
          type: string
          description: The last time the user was updated.
    Name:
      type: object
      properties:
        first:
          type: string
          maxLength: 50
          minLength: 1
        last:
          type: string
          maxLength: 50
          minLength: 1
        display:
          type: string
          maxLength: 50
          minLength: 3

    Task:
      type: object
      properties:
        uid:
          type: string
          description: Owning User ID
        tid:
          type: string
          description: this Task's
        parent:
          type: string
          description: ID of parent task
          default: null
        text:
          type: string
          maxLength: 255
          minLength: 1
          description: The name or title of the task. A shorthand
        notes:
          type: array
          items:
            $ref: "#/components/schemas/Note"
        due:
          type: object
          description: The date this task is due.
        reminders:
          type: array
          description: An array of dates for reminders
          items:
            type: string
        state:
          type: string
          enum:
            - todo
            - done
            - cancelled
        pinned:
          type: boolean
          description: Whether this task is pinned to the top of lists
          default: false
        tags:
          type: array
          maxLength: 50
          items:
            type: string
            maxLength: 255
            minLength: 1

    Note:
      type: object
      description: A note
      properties:
        uid:
          type: string
          description: Owning user ID
        title:
          type: string
          maxLength: 255
        text:
          type: string
          maxLength: 5120
        tags:
          type: array
          maxLength: 50
          items:
            type: string
            maxLength: 255
            minLength: 1

paths:
  /api/user/{uid}:
    get:
      description: Get information on the associated user
      parameters:
        - name: uid
          in: path
          description: User ID
          required: true
          schema:
            type: string
        - name: token
          in: header
          description: Auth token
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
        401:
          description: Unauthorized
        404:
          description: No such user
    post:
      description: Create a new user
      parameters:
        - name: uid
          in: path
          description: User ID
          required: true
          schema:
            type: string
        - name: token
          in: header
          description: Auth token
          required: true
          schema:
            type: string
      requestBody:
        description: The user information to create
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        201:
          description: User created
        401:
          description: Unauthorized
    put:
      description: Update user information
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
        - name: token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        description: TODO
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        200:
          description: User updated
